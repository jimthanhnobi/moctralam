@model X.PagedList.IPagedList<GearShop.Models.ProductType>
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
    ViewData["Title"] = "Quản lý danh mục";
    Layout = "_LayoutStaff";
}

<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-12">
            <div class="bg-light rounded h-100 p-4">
                <div class="d-flex align-items-center justify-content-between mb-4">
                    <h4 class="mb-0">Danh sách Danh mục</h4>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fa fa-plus me-2"></i>Tạo mới
                    </a>
                </div>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Num</th>
                                <th>
                                    <a href="@Url.Action("Index", new { page = ViewData["CurrentPage"], sortOrder = ViewData["CurrentSort"]?.ToString() == "name" ? "name_desc" : "name" })">Tên danh mục</a>
                                </th>
                                <th>
                                    <a href="@Url.Action("Index", new { page = ViewData["CurrentPage"], sortOrder = ViewData["CurrentSort"]?.ToString() == "created_date" ? "created_date_desc" : "created_date" })">Ngày tạo</a>
                                </th>
                                <th>
                                    <a href="@Url.Action("Index", new { page = ViewData["CurrentPage"], sortOrder = ViewData["CurrentSort"]?.ToString() == "created_by" ? "created_by_desc" : "created_by" })">Người tạo</a>
                                </th>
                                <th>Ảnh danh mục</th>
                                <th>
                                    <a href="@Url.Action("Index", new { page = ViewData["CurrentPage"], sortOrder = ViewData["CurrentSort"]?.ToString() == "modified_date" ? "modified_date_desc" : "modified_date" })">Ngày chỉnh sửa</a>
                                </th>
                                <th>
                                    <a href="@Url.Action("Index", new { page = ViewData["CurrentPage"], sortOrder = ViewData["CurrentSort"]?.ToString() == "modified_by" ? "modified_by_desc" : "modified_by" })">Người chỉnh sửa</a>
                                </th>
                                <th>
                                    <a href="@Url.Action("Index", new { page = ViewData["CurrentPage"], sortOrder = ViewData["CurrentSort"]?.ToString() == "status" ? "status_desc" : "status" })">Trạng thái</a>
                                </th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        @{
                            var index = (Model.PageNumber - 1) * Model.PageSize + 1;
                        }
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@index</td>
                                    <td>@Html.DisplayFor(modelItem => item.TypeName)</td>
                                    <td class="text-truncate" style="max-width: 200px;" title="@item.DateTime">
                                        @item.DateTime
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                                    <td><img src="@item.ImageUrl" style="width: 100%; height: 100%; object-fit: cover;" /></td>
                                    <td>@Html.DisplayFor(modelItem => item.ModifiedDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.MofifiedBy)</td>
                                    <td>
                                        @if (item.Status == 1)
                                        {
                                            <span class="badge bg-success">Đang bán</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Không bán</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                                <i class="fa fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                                <i class="fa fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                index++;
                            }
                        </tbody>
                    </table>
                </div>

                <div class="d-flex justify-content-center mt-3">
                    @Html.PagedListPager(
                             (IPagedList)Model,
                             page => Url.Action("Index", new { page, sortOrder = ViewData["CurrentSort"] }),
                             new PagedListRenderOptions
                    {
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" },
                        UlElementClasses = new[] { "pagination" },
                        ActiveLiElementClass = "active"
                    }
                             )
                </div>
            </div>
        </div>
    </div>
</div>